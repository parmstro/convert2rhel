---
# simplified installation based on EAP rpm installation
# supporting RHEL7 and RHEL8 with RPM install
# requires proper Red Hat Subscriptions to be attached
# this is a repo based installation for JBoss EAP to run as a service

- name: Begin install on RHEL7 Host
  block:

    - name: RHEL7 - Ensure repos are available
      community.general.rhsm_repository:
        name: jb-eap-7.4-for-rhel-7-x86_64-rpms
  
    - name: RHEL7 - Install JBoss EAP 7 group and its dependencies - uses jdk1.8
      ansible.builtin.yum:
        name: 
          - "@jboss-eap7"
          - maven
          - git
        state: latest

  when: ansible_distribution_major_version == "7"

# In latest RHEL8, we must use modules
- name: Begin install on RHEL8 Host
  block:
    - name: RHEL8 - Clean metadata
      ansible.builtin.command: "yum clean all"

    - name: RHEL8 - Enable repo
      ansible.builtin.command: "subscription-manager repos --enable=jb-eap-7.4-for-rhel-8-x86_64-rpms"

    - name: RHEL8 - Install JBoss EAP 7 group and its dependencies - uses jdk1.8
      ansible.builtin.yum:
        name: "@jboss-eap7"
        state: present

    - name: RHEL8 - Install maven
      ansible.builtin.yum:
        name: "@maven:3.6"
        state: present

    - name: RHEL8 - Install python
      ansible.builtin.yum:      
        name:  "@python36:3.6" 
        state: present

    - name: RHEL8 - Install git
      ansible.builtin.yum:
        name:  "git"
        state: present

  when: ansible_distribution_major_version == "8"

- name: Configure the JBoss EAP 7 Standalone Service
  ansible.builtin.service:
    name: eap7-standalone.service
    enabled: true
    state: started

# RPM Installation creates all users and groups  
# and appropriately sets file ownership

# clone the jboss-developer github repo for sample apps
- name: Clone the jboss-developer github repo for sample apps
  ansible.builtin.git:
    repo: "{{ sample_app_git_repo }}"
    dest: "{{ sample_app_root }}"

- name: Deploy the standalone configuration template
  ansible.builtin.template:
    src: eap7-standalone.conf.j2
    dest: "{{ jboss_standalone_conf_path }}"

- name: Deploy the standalone xml
  ansible.builtin.template:
    src: standalone.xml.j2
    dest: "{{ jboss_config_dir }}/standalone.xml"

- name: build and deploy the sample app
  ansible.builtin.command:
    chdir: "{{ sample_app_root }}/{{ sample_app_dir }}"
    cmd: "mvn clean install wildfly:deploy"

- name: Ensure that firewalld is installed
  ansible.builtin.yum:
    name: firewalld
    state: latest
  
- name: Ensure that firewalld is started
  ansible.builtin.service:
    name: firewalld
    state: started
  
- name: deploy firewalld rules
  ansible.posix.firewalld:
    immediate: yes
    port: "{{ port_protocol }}"
    zone: "public"
    state: enabled
    permanent: yes
  loop:
  - "{{ http_port }}/tcp"
  - "{{ https_port }}/tcp"
  loop_control:
    loop_var: port_protocol
